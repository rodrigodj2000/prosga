<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_assetic_4bff08a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '4bff08a',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/4bff08a.css',    ),  ),  4 =>   array (  ),),
        '_assetic_4bff08a_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '4bff08a',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/4bff08a_part_1_form_1.css',    ),  ),  4 =>   array (  ),),
        '_assetic_4bff08a_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '4bff08a',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/4bff08a_part_1_layout_2.css',    ),  ),  4 =>   array (  ),),
        '_assetic_21fde63' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '21fde63',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/21fde63.css',    ),  ),  4 =>   array (  ),),
        '_assetic_21fde63_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '21fde63',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/21fde63_template_1.css',    ),  ),  4 =>   array (  ),),
        '_assetic_fe23501' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fe23501',    'pos' => NULL,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/fe23501.js',    ),  ),  4 =>   array (  ),),
        '_assetic_fe23501_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fe23501',    'pos' => 0,    '_format' => 'js',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/js/fe23501_part_1_javascript_1.js',    ),  ),  4 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'prosga_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\DefaultController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'prosga_actividades' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\DefaultController::actividadesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/actividades',    ),  ),  4 =>   array (  ),),
        'prosga_auditoria' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\DefaultController::auditoriaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auditoria',    ),  ),  4 =>   array (  ),),
        'prosga_consultas' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\DefaultController::consultasAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/consultas',    ),  ),  4 =>   array (  ),),
        'prosga_acercade' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\DefaultController::acercadeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/acercade',    ),  ),  4 =>   array (  ),),
        'sonata_admin_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => 'sonata_admin_dashboard',    'permanent' => 'true',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),),
        'sonata_admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),),
        'sonata_admin_retrieve_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-form-field-element',    ),  ),  4 =>   array (  ),),
        'sonata_admin_append_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:appendFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/append-form-field-element',    ),  ),  4 =>   array (  ),),
        'sonata_admin_short_object_information' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:getShortObjectDescriptionAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'html|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/core/get-short-object-description',    ),  ),  4 =>   array (  ),),
        'sonata_admin_set_object_field_value' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:setObjectFieldValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/set-object-field-value',    ),  ),  4 =>   array (  ),),
        'sonata_admin_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search',    ),  ),  4 =>   array (  ),),
        'sonata_admin_retrieve_autocomplete_items' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveAutocompleteItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-autocomplete-items',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user/list',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user/create',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user/batch',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_user_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.user.admin.user',    '_sonata_name' => 'admin_sonata_user_user_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/user/export',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group/list',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group/create',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group/batch',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group',    ),  ),  4 =>   array (  ),),
        'admin_sonata_user_group_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'sonata.user.admin.group',    '_sonata_name' => 'admin_sonata_user_group_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/sonata/user/group/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::listAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::createAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::batchAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::editAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::deleteAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::showAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_permiso_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CRUDController::exportAction',    '_sonata_admin' => 'prosga.admin.permiso',    '_sonata_name' => 'admin_inft_prosga_permiso_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/permiso/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::listAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::createAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::batchAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::editAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::deleteAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::showAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_sector_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\SectorController::exportAction',    '_sonata_admin' => 'prosga.admin.sector',    '_sonata_name' => 'admin_inft_prosga_sector_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/sector/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::listAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::createAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::batchAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::editAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::deleteAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::showAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_cargo_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\CargoController::exportAction',    '_sonata_admin' => 'prosga.admin.cargo',    '_sonata_name' => 'admin_inft_prosga_cargo_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/cargo/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::listAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::createAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::batchAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::editAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::deleteAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::showAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_estado_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\EstadoController::exportAction',    '_sonata_admin' => 'prosga.admin.estado',    '_sonata_name' => 'admin_inft_prosga_estado_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/estado/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::listAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::createAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::batchAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::editAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::deleteAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::showAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_frecuencia_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\FrecuenciaController::exportAction',    '_sonata_admin' => 'prosga.admin.frecuencia',    '_sonata_name' => 'admin_inft_prosga_frecuencia_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/frecuencia/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::listAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::createAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::batchAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::editAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::deleteAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::showAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_norma_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\NormaController::exportAction',    '_sonata_admin' => 'prosga.admin.norma',    '_sonata_name' => 'admin_inft_prosga_norma_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/norma/export',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::listAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma/list',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::createAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma/create',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::batchAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma/batch',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::editAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::deleteAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::showAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma',    ),  ),  4 =>   array (  ),),
        'admin_inft_prosga_alarma_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'INFT\\prosgaBundle\\Controller\\AlarmaController::exportAction',    '_sonata_admin' => 'prosga.admin.alarma',    '_sonata_name' => 'admin_inft_prosga_alarma_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/inft/prosga/alarma/export',    ),  ),  4 =>   array (  ),),
        'sonata_user_admin_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login',    ),  ),  4 =>   array (  ),),
        'sonata_user_admin_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login_check',    ),  ),  4 =>   array (  ),),
        'sonata_user_admin_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/logout',    ),  ),  4 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),),
        '_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
